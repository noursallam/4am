---
import Footer from "../components/elements/Footer.astro";
import Navbar from "../components/elements/Navbar.astro";
import BackgroundShapes from "../components/shared/BackgroundShapes.astro";

export interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang="ar" dir="rtl">  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content="وكالة 4AM - وكالة متخصصة في التسويق الرقمي وإنشاء الهويات البصرية وتطوير المواقع الإلكترونية. نقدم حلولاً إبداعية متكاملة لنمو علامتك التجارية.">
    <meta name="keywords" content="تسويق رقمي, تصميم, هوية بصرية, سوشيال ميديا, وكالة إعلانية">
    <meta property="og:title" content={title} />
    <meta property="og:description" content="وكالة 4AM - وكالة متخصصة في التسويق الرقمي وإنشاء الهويات البصرية وتطوير المواقع الإلكترونية" />
    <meta property="og:type" content="website" />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content="وكالة متخصصة في التسويق الرقمي وإنشاء الهويات البصرية وتطوير المواقع الإلكترونية" />
    <title>{title}</title>
    <link
      href="https://fonts.googleapis.com/css2?family=Alexandria:wght@300;400;500;600;700&display=swap"
      rel="stylesheet"
    />
    <!-- Add smooth scrolling and improved typography -->
    <link rel="stylesheet" href="https://unpkg.com/aos@next/dist/aos.css" />
  </head>
  <body class="overflow-hidden overflow-y-auto bg-body font-zawi selection:bg-primary/20 selection:text-primary">
    <!-- Background shapes -->
    <BackgroundShapes />
    
    <!-- Navbar -->
    <Navbar />
    
    <!-- Main content -->
    <slot />
    
    <!-- Footer -->
    <Footer />
      <!-- Load AOS animation library -->
    <script is:inline src="https://unpkg.com/aos@next/dist/aos.js"></script>
    <script is:inline>
      // Initialize AOS animations
      document.addEventListener('DOMContentLoaded', () => {
        // Detect if mobile or tablet for adjusting animation settings
        const isMobile = window.innerWidth < 768;
        
        AOS.init({
          duration: isMobile ? 600 : 800,
          easing: 'ease-out',
          once: true,
          disable: window.innerWidth < 480 // Disable on very small screens for better performance
        });
        
        // Add class for smoother transitions
        document.body.classList.add('aos-initialized');
        
        // Fix for Safari overflow issue
        setTimeout(() => {
          document.documentElement.style.overflowX = 'hidden';
        }, 500);
      });
      
      // Update year in footer
      const yearElements = document.querySelectorAll('#year');
      if (yearElements.length > 0) {
        yearElements.forEach(el => {
          el.innerText = new Date().getFullYear();
        });
      }

      // Simple and reliable hero slider
      window.addEventListener('DOMContentLoaded', () => {
        const heroSlider = document.getElementById('hero-slider');
        const slides = document.querySelectorAll('.hero-slide');
        
        if (slides.length > 0 && heroSlider) {
          console.log('Hero slider initialized with', slides.length, 'slides');
          let currentSlide = 0;
          
          // Function to show only the current slide
          function showSlide(index) {
            slides.forEach((slide, i) => {
              if (i === index) {
                slide.classList.add('opacity-100');
                slide.classList.remove('opacity-0');
              } else {
                slide.classList.remove('opacity-100');
                slide.classList.add('opacity-0');
              }
            });
          }
          
          // Initialize the first slide
          showSlide(0);
          
          // Function to advance to the next slide
          function nextSlide() {
            currentSlide = (currentSlide + 1) % slides.length;
            showSlide(currentSlide);
          }
          
          // Start automatic slideshow
          const slideInterval = setInterval(nextSlide, 3000); // Change slide every 3 seconds
          
          // Clean up on page unload
          window.addEventListener('beforeunload', () => {
            clearInterval(slideInterval);
          });
        }
      });
    </script>
  </body>
  <script>
    const switchTheme = document.querySelector(
      "[data-switch-theme]"
    ) as HTMLButtonElement;

    if (
      localStorage.getItem("appTheme") === "dark" ||
      (!("appTheme" in localStorage) &&
        window.matchMedia("(prefers-color-scheme: dark)").matches)
    ) {
      document.documentElement.classList.add("dark");
    } else {
      document.documentElement.classList.remove("dark");
    }
    if (switchTheme) {
      switchTheme.addEventListener("click", (e) => {
        e.preventDefault();
        const doc = document.documentElement;
        if (doc) {
          if (localStorage.getItem("appTheme")) {
            if (localStorage.getItem("appTheme") === "light") {
              doc.classList.add("dark");
              localStorage.setItem("appTheme", "dark");
            } else {
              document.documentElement.classList.remove("dark");
              localStorage.setItem("appTheme", "light");
            }
          } else {
            if (doc.classList.contains("dark")) {
              doc.classList.remove("dark");
              localStorage.setItem("appTheme", "light");
            } else {
              doc.classList.add("dark");
              localStorage.setItem("appTheme", "dark");
            }
          }
        }
      });
    }
  </script>
  <script>
    const toggleMenu = document.querySelector(
      "[data-toggle-nav]"
    ) as HTMLButtonElement;
    const navbar = document.querySelector("[data-navbar]") as HTMLDivElement;
    const overlayNav = document.querySelector(
      "[data-nav-overlay]"
    ) as HTMLDivElement;
    if (toggleMenu) {
      toggleMenu.addEventListener("click", e => {
        e.preventDefault();
        if (toggleMenu.getAttribute("data-open-nav") === "false") {
          toggleMenu.setAttribute("data-open-nav", "true");
          overlayNav.setAttribute("data-is-visible", "true");
          document.body.classList.add("!overflow-y-hidden");
		  navbar.style.height = `${navbar.scrollHeight}px`

        }else{
			toggleMenu.setAttribute("data-open-nav", "false");
        	overlayNav.setAttribute("data-is-visible", "false");
        	document.body.classList.remove("!overflow-y-hidden");
		  	navbar.style.height = "0px"
		}
		
        
      });

      navbar.addEventListener("click", () => {
        toggleMenu.setAttribute("data-open-nav", "false");
        overlayNav.setAttribute("data-is-visible", "false");
        document.body.classList.remove("!overflow-y-hidden");
		  	navbar.style.height = "0px"
      });

      overlayNav.addEventListener("click", () => {
        toggleMenu.setAttribute("data-open-nav", "false");
        	overlayNav.setAttribute("data-is-visible", "false");
        	document.body.classList.remove("!overflow-y-hidden");
		  	navbar.style.height = "0px"
      });
    }
  </script>
</html>
<style is:global>
  :root {
    --color-bg: 255 255 255;
    --color-border: 255 255 255;
    --color-box: 255 255 255;
    --box-border: 229 231 235;
    --box-sd: 226 232 240 / 0.5;
    --heading-1:  23 37 84;
    --heading-2: 31 41 55;
    --heading-3: 55 65 81;
  }

  .dark {
    --color-bg: 3 7 18;
    --color-box: 17 24 39;
    --box-border: 243 244 246/0.1;
    --box-sd: transparent;
    --heading-1:  255 255 255;
    --heading-2:  243 244 246;
    --heading-3:  209 213 219;
  }

  @font-face {
    font-family: '29LT Zawi';
    src: url('/fonts/29LTZawi-Regular.woff2') format('woff2'),
         url('/fonts/29LTZawi-Regular.woff') format('woff');
    font-weight: normal;
    font-style: normal;
    font-display: swap;
  }

  html {
    scroll-behavior: smooth;
  }
  
  body {
    font-family: '29LT Zawi', 'Alexandria', sans-serif;
  }

  .font-zawi {
    font-family: '29LT Zawi', 'Alexandria', sans-serif;
  }

  [data-toggle-nav][data-open-nav="true"] #line1 {
    transform: translateY(0.375rem) rotate(40deg);
  }
  [data-toggle-nav][data-open-nav="true"] #line2 {
    transform: scaleX(0);
    opacity: 0;
  }
  [data-toggle-nav][data-open-nav="true"] #line3 {
    transform: translateY(-0.375rem) rotate(-40deg);
  }

  [data-nav-overlay][data-is-visible="true"] {
    visibility: visible;
    display: flex;
  }

  /* Hero Slider Styles */
  #hero-slider {
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);
  }

  .hero-slide {
    transition: opacity 0.8s ease-in-out;
  }

  /* Add object position adjustments for better image framing on mobile */
  @media (max-width: 768px) {
    .hero-slide {
      object-position: center center !important;
    }
    
    /* Ensure the slider doesn't break the layout on very small screens */
    #hero-slider {
      min-height: 250px;
      margin-top: 20px;
      margin-bottom: 20px;
    }
  }
</style>
